      SUBROUTINE PULLFORCE(ZERO, A, B, MACHEP, T,
     1                   LAMBDA,LAMBDA0,L,R0,MU0,BETA,B0)
C>    SINGLE FILAMENT: COMPUTES PULLING FORCE FOR A GIVEN STRETCH     
C*********************************************************************72
C
C     ZERO SEEKS THE ROOT OF A FUNCTION F(X) IN AN INTERVAL [A,B].
C
C     DISCUSSION:
C
C     THE INTERVAL [A,B] MUST BE A CHANGE OF SIGN INTERVAL FOR F.
C     THAT IS, F(A) AND F(B) MUST BE OF OPPOSITE SIGNS.  THEN
C     ASSUMING THAT F IS CONTINUOUS IMPLIES THE EXISTENCE OF AT LEAST
C     ONE VALUE C BETWEEN A AND B FOR WHICH F(C) = 0.
C
C     THE LOCATION OF THE ZERO IS DETERMINED TO WITHIN AN ACCURACY
C     OF 6 * MACHEPS * ABS ( C ) + 2 * T.
C
C
C     LICENSING:
C
C     THIS CODE IS DISTRIBUTED UNDER THE GNU LGPL LICENSE.
C
C     MODIFIED:
C
C     11 FEBRUARY 2013
C
C     AUTHOR:
C
C     RICHARD BRENT
C     MODIFICATIONS BY JOHN BURKARDT
C
C     REFERENCE:
C
C     RICHARD BRENT,
C     ALGORITHMS FOR MINIMIZATION WITHOUT DERIVATIVES,
C     DOVER, 2002,
C     ISBN: 0-486-41998-3,
C     LC: QA402.5.B74.
C
C     PARAMETERS:
C
C     INPUT, DOUBLE PRECISION A, B, THE ENDPOINTS OF THE CHANGE OF SIGN
C     INTERVAL.
C     INPUT, DOUBLE PRECISION MACHEP, AN ESTIMATE FOR THE RELATIVE
C     MACHINE PRECISION.
C
C     INPUT, DOUBLE PRECISION T, A POSITIVE ERROR TOLERANCE.
C
C     INPUT, EXTERNAL DOUBLE PRECISION F, THE NAME OF A USER-SUPPLIED
C     FUNCTION, OF THE FORM "FUNCTION G ( F )", WHICH EVALUATES THE
C     FUNCTION WHOSE ZERO IS BEING SOUGHT.
C
C     OUTPUT, DOUBLE PRECISION ZERO, THE ESTIMATED VALUE OF A ZERO OF
C     THE FUNCTION G.
C
      IMPLICIT NONE
C
      DOUBLE PRECISION A
      DOUBLE PRECISION B
      DOUBLE PRECISION C
      DOUBLE PRECISION D
      DOUBLE PRECISION E
      DOUBLE PRECISION FA
      DOUBLE PRECISION FB
      DOUBLE PRECISION FC
      DOUBLE PRECISION M
      DOUBLE PRECISION MACHEP
      DOUBLE PRECISION P
      DOUBLE PRECISION Q
      DOUBLE PRECISION R
      DOUBLE PRECISION S
      DOUBLE PRECISION SA
      DOUBLE PRECISION SB
      DOUBLE PRECISION T
      DOUBLE PRECISION TOL
      DOUBLE PRECISION ZERO
C
      DOUBLE PRECISION L,R0,MU0,B0,BETA,LAMBDA,LAMBDA0
C      
C     MAKE LOCAL COPIES OF A AND B.
C
      SA = A
      SB = B
      CALL EVALG(FA,SA,LAMBDA,LAMBDA0,L,R0,MU0,BETA,B0)
      CALL EVALG(FB,SB,LAMBDA,LAMBDA0,L,R0,MU0,BETA,B0)
C      FA = F ( SA )
C      FB = F ( SB )
C
10    CONTINUE
C
      C = SA
      FC = FA
      E = SB - SA
      D = E

20    CONTINUE
C
      IF ( ABS ( FC ) .LT. ABS ( FB ) ) THEN
        SA = SB
        SB = C
        C = SA
        FA = FB
        FB = FC
        FC = FA
      END IF
C
30    CONTINUE
C
      TOL = 2.0D+00 * MACHEP * ABS ( SB ) + T
      M = 0.5D+00 * ( C - SB )
      IF ( ABS ( M ) .LE. TOL .OR. FB .EQ. 0.0D+00 ) GO TO 140
      IF ( ABS ( E ) .GE. TOL .AND. ABS ( FA ) .GT. ABS ( FB ) )
     &  GO TO 40
C
      E = M
      D = E
      GO TO 100
C
40    CONTINUE
C
      S = FB / FA
      IF ( SA .NE. C ) GO TO 50
C
      P = 2.0D+00 * M * S
      Q = 1.0D+00 - S
      GO TO 60
C
50    CONTINUE
C
      Q = FA / FC
      R = FB / FC
      P = S *
     &  ( 2.0D+00 * M * Q * ( Q - R ) - ( SB - SA ) * ( R - 1.0D+00 ) )
      Q = ( Q - 1.0D+00 ) * ( R - 1.0D+00 ) * ( S - 1.0D+00 )
C
60    CONTINUE
C
      IF ( P .LE. 0.0D+00 ) GO TO 70
C
      Q = - Q
      GO TO 80
C
70    CONTINUE
C
      P = - P
C
80    CONTINUE
C
      S = E
      E = D
      IF ( 2.0D+00 * P .GE. 3.0D+00 * M * Q - ABS ( TOL * Q ) .OR.
     &  P .GE. ABS ( 0.5D+00 * S * Q ) ) GO TO 90
C
      D = P / Q
      GO TO 100
C
90    CONTINUE
C
      E = M
      D = E
C
100   CONTINUE
C
      SA = SB
      FA = FB
      IF ( ABS ( D ) .LE. TOL ) GO TO 110
      SB = SB + D
      GO TO 130
C
110   CONTINUE
C
      IF ( M .LE. 0.0D+00 ) GO TO 120
      SB = SB + TOL
      GO TO 130
C
120   CONTINUE
C
      SB = SB - TOL
C
130   CONTINUE
C
C      FB = F ( SB )
      CALL EVALG(FB,SB,LAMBDA,LAMBDA0,L,R0,MU0,BETA,B0)
      IF ( FB .GT. 0.0D+00 .AND. FC .GT. 0.0D+00 ) GO TO 10
      IF ( FB .LE. 0.0D+00 .AND. FC .LE. 0.0D+00 ) GO TO 10
      GO TO 20
C
140   CONTINUE
C
      ZERO = SB
C
      RETURN
      END SUBROUTINE PULLFORCE
C
C*********************************************************************72
